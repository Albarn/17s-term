@startuml

title __AUDIOOUTPUTS's Class Diagram__\n

  package  {
    package audioOutputs {
      abstract class AudioOutput {
          + name : String
          # price : double
          # power : double
          # weight : double
          {static} + sortByName()
          {static} + sortByPrice()
          {static} + maxPrice()
          {static} + minPrice()
          + toString()
          + getPrice()
          {abstract} + setPrice()
          + getPower()
          {abstract} + setPower()
          + getWeight()
          {abstract} + setWeight()
      }
    }
  }
  

  package  {
    package audioOutputs {
      class AudioOutputTests {
          - names : String[]
          - genArray()
          + sortByPrice_CommonArray_AscendingOrder()
          + sortByName_CommonArray_AscendingOrder()
          + maxPrice_CommonArray_NoDevicesWithHigherPrice()
          + minPrice_CommonArray_NoDevicesWithLowerPrice()
          + maxPrice_EmptyArray_Null()
          + minPrice_EmptyArray_Null()
      }
    }
  }
  

  package  {
    package audioOutputs {
      class Headphones {
          - length : double
          - minFrequency : double
          - maxFrequency : double
          + garniture : boolean
          + toString()
          + getMaxFrequency()
          + setMaxFrequency()
          + getMinFrequency()
          + setMinFrequency()
          + setLength()
          + getLength()
          + setPower()
          + setPrice()
          + setWeight()
      }
    }
  }
  

  package  {
    package audioOutputs {
      class HeadphonesTests {
          + price : double
          + power : double
          + weight : double
          + length : double
          + minFrequency : double
          + maxFrequency : double
          + expectedResult : boolean
          + valueType : String
          {static} + data()
          - MakeHeadPhones()
          + setPrice_RangeValue_ChecksThis()
          + setPower_RangeValue_ChecksThis()
          + setWeight_RangeValue_ChecksThis()
          + setLength_RangeValue_ChecksThis()
          + setMaxFrequency_RangeValue_ChecksThis()
          + setMinFrequency_RangeValue_ChecksThis()
      }
    }
  }
  

  package  {
    package audioOutputs {
      class Radio {
          + AM : boolean
          + FM : boolean
          + CD : boolean
          + USB : boolean
          - radioThread : Thread
          - hifiThread : Thread
          + toString()
          + setPower()
          + setPrice()
          + setWeight()
          + Radio()
          + Radio()
          + getRadioThread()
          + getHifiThread()
          + setHifiThread()
          + run()
      }
    }
  }
  

  package  {
    package audioOutputs {
      class RadioState {
          + isWorking : boolean
      }
    }
  }
  

  package  {
    package audioOutputs {
      class RadioTests {
          + price : double
          + power : double
          + weight : double
          + expectedResult : boolean
          + valueType : String
          {static} + data()
          - MakeRadio()
          + setPrice_RangeValue_ChecksThis()
          + setPower_RangeValue_ChecksThis()
          + setWeight_RangeValue_ChecksThis()
      }
    }
  }
  

  package  {
    package audioOutputs {
      class Speakers {
          - minFrequency : double
          - maxFrequency : double
          + portable : boolean
          + toString()
          + getMaxFrequency()
          + setMaxFrequency()
          + getMinFrequency()
          + setMinFrequency()
          + setPower()
          + setPrice()
          + setWeight()
      }
    }
  }
  

  package  {
    package audioOutputs {
      class SpeakersTests {
          + price : double
          + power : double
          + weight : double
          + minFrequency : double
          + maxFrequency : double
          + expectedResult : boolean
          + valueType : String
          {static} + data()
          - MakeHeadPhones()
          + setPrice_RangeValue_ChecksThis()
          + setPower_RangeValue_ChecksThis()
          + setWeight_RangeValue_ChecksThis()
          + setMaxFrequency_RangeValue_ChecksThis()
          + setMinFrequency_RangeValue_ChecksThis()
      }
    }
  }
  

  AudioOutput -up-|> Serializable
  Headphones -up-|> AudioOutput
  Radio -up-|> Runnable
  Radio -up-|> AudioOutput
  Radio o-- RadioState : radioState
  Speakers -up-|> AudioOutput


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
